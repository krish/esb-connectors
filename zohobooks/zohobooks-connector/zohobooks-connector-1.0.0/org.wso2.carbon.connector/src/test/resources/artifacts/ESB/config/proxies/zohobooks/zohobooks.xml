<?xml version="1.0" encoding="UTF-8"?>
<proxy name="zohobooks" startOnLoad="true" statistics="disable" trace="disable" transports="https,http" xmlns="http://ws.apache.org/ns/synapse">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)"/>
         <property name="authToken" expression="json-eval($.authToken)"/>
         <property name="organizationId" expression="json-eval($.organizationId)"/>
         <property name="itemName" expression="json-eval($.itemName)"/>
         <property name="description" expression="json-eval($.description)"/>
         <property name="rate" expression="json-eval($.rate)"/>
         <property name="unit" expression="json-eval($.unit)"/>
         <property name="taxId" expression="json-eval($.taxId)"/>
         <property name="description" expression="json-eval($.description.equals)"/>
         <property name="itemId" expression="json-eval($.itemId)"/>
         <property name="website" expression="json-eval($.website)"/>
         <property name="companyName" expression="json-eval($.companyName)"/>
         <property name="contactName" expression="json-eval($.contactName)"/>
         <property name="notes" expression="json-eval($.notes)"/>
         <property name="contactId" expression="json-eval($.contactId)"/>
         <property name="contactNameStartsWith" expression="json-eval($.contactName.startsWith)"/>
         <property name="sortColumn" expression="json-eval($.sortColumn)"/>
         <property name="customerId" expression="json-eval($.customerId)"/>
         <property name="invoiceNumber" expression="json-eval($.invoiceNumber)"/>
         <property name="dueDate" expression="json-eval($.dueDate)"/>
         <property name="lineItems" expression="json-eval($.lineItems)"/>
         <property name="notes" expression="json-eval($.notes)"/>
         <property name="invoiceId" expression="json-eval($.invoiceId)"/>
         <property name="shouldPrint" expression="json-eval($.shouldPrint)"/>
         <property name="invoiceFormat" expression="json-eval($.invoiceFormat)"/>
         <property name="itemId" expression="json-eval($.itemId)"/>
         <property name="perPage" expression="json-eval($.perPage)"/>
         <zohobooks.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <authToken>{$ctx:authToken}</authToken>
            <organizationId>{$ctx:organizationId}</organizationId>
         </zohobooks.init>
         <switch source="get-property('transport','Action')">
            <case regex="urn:createItem">
               <zohobooks.createItem regex="urn:createItem">
                  <itemName>{$ctx:itemName}</itemName>
                  <description>{$ctx:description}</description>
                  <rate>{$ctx:rate}</rate>
                  <unit>{$ctx:unit}</unit>
               </zohobooks.createItem>
            </case>
            <case regex="urn:listItems">
               <zohobooks.listItems regex="urn:listItems">
                  <taxId>{$ctx:taxId}</taxId>
                  <description>{$ctx:description}</description>
               </zohobooks.listItems>
            </case>
            <case regex="urn:getItem">
               <zohobooks.getItem regex="urn:getItem">
                  <itemId>{$ctx:itemId}</itemId>
               </zohobooks.getItem>
            </case>
            <case regex="urn:createContact">
               <zohobooks.createContact regex="urn:createContact">
                  <website>{$ctx:website}</website>
                  <companyName>{$ctx:companyName}</companyName>
                  <contactName>{$ctx:contactName}</contactName>
                  <notes>{$ctx:notes}</notes>
               </zohobooks.createContact>
            </case>
            <case regex="urn:getContact">
               <zohobooks.getContact regex="urn:getContact">
                  <contactId>{$ctx:contactId}</contactId>
               </zohobooks.getContact>
            </case>
            <case regex="urn:listContacts">
               <zohobooks.listContacts regex="urn:listContacts">
                  <contactNameStartsWith>{$ctx:contactNameStartsWith}</contactNameStartsWith>
                  <sortColumn>{$ctx:sortColumn}</sortColumn>
               </zohobooks.listContacts>
            </case>
            <case regex="urn:createInvoice">
               <zohobooks.createInvoice regex="urn:createInvoice">
                  <customerId>{$ctx:customerId}</customerId>
                  <invoiceNumber>{$ctx:invoiceNumber}</invoiceNumber>
                  <dueDate>{$ctx:dueDate}</dueDate>
                  <lineItems>{$ctx:lineItems}</lineItems>
                  <notes>{$ctx:notes}</notes>
               </zohobooks.createInvoice>
            </case>
            <case regex="urn:getInvoice">
               <zohobooks.getInvoice regex="urn:getInvoice">
                  <invoiceId>{$ctx:invoiceId}</invoiceId>
                  <shouldPrint>{$ctx:shouldPrint}</shouldPrint>
                  <invoiceFormat>{$ctx:invoiceFormat}</invoiceFormat>
               </zohobooks.getInvoice>
            </case>
            <case regex="urn:listInvoices">
               <zohobooks.listInvoices regex="urn:listInvoices">
                  <itemId>{$ctx:itemId}</itemId>
                  <perPage>{$ctx:perPage}</perPage>
               </zohobooks.listInvoices>
            </case>
         </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
