<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listCampaigns" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="campaignId"
      description="Return the campaign using a know campaign_id. Accepts multiples separated by commas when not using exact matching." />
   <parameter name="parentId"
      description="Return the child campaigns using a known parent campaign_id. Accepts multiples separated by commas when not using exact matching." />
   <parameter name="listId" description="The list to send this campaign to." />
   <parameter name="folderId" description="Only show campaigns from this folder id." />
   <parameter name="templateId" description="Only show campaigns using this template id." />
   <parameter name="status"
      description="Return campaigns of a specific status - one of 'sent', 'save', 'paused', 'schedule', 'sending'. Accepts multiples separated by commas when not using exact matching." />
   <parameter name="type"
      description="Return campaigns of a specific type - one of 'regular', 'plaintext', 'absplit', 'rss', 'auto'. Accepts multiples separated by commas when not using exact matching." />
   <parameter name="fromName" description="Only show campaigns that have this 'From Name'." />
   <parameter name="fromEmail" description="Only show campaigns that have this 'Reply-to Email'." />
   <parameter name="title" description="Only show campaigns that have this title." />
   <parameter name="subject" description="Only show campaigns that have this subject." />
   <parameter name="sendtimeStart" description="Only show campaigns that have been sent since this date/time." />
   <parameter name="sendtimeEnd" description="Only show campaigns that have been sent before this date/time." />
   <parameter name="usesSegment" description="Whether to return just campaigns with or without segments." />
   <parameter name="exact"
      description="Flag for whether to filter on exact values when filtering, or search within content for filter values - defaults to true." />
   <parameter name="start"
      description="Control paging of campaigns, start results at this campaign #, defaults to 1st page of data." />
   <parameter name="limit"
      description="Control paging of campaigns, number of campaigns to return with each call, defaults to 25." />
   <parameter name="sortField"
      description="One of 'create_time', 'send_time', 'title', 'subject' . Invalid values will fall back on 'create_time' - case insensitive." />
   <parameter name="sortDirection" description="DESC for descending (default), ASC for Ascending." />
   <sequence>
      <property name="uri.var.campaignId" expression="$func:campaignId" />
      <property name="uri.var.parentId" expression="$func:parentId" />
      <property name="uri.var.listId" expression="$func:listId" />
      <property name="uri.var.folderId" expression="$func:folderId" />
      <property name="uri.var.templateId" expression="$func:templateId" />
      <property name="uri.var.status" expression="$func:status" />
      <property name="uri.var.type" expression="$func:type" />
      <property name="uri.var.fromName" expression="$func:fromName" />
      <property name="uri.var.fromEmail" expression="$func:fromEmail" />
      <property name="uri.var.title" expression="$func:title" />
      <property name="uri.var.subject" expression="$func:subject" />
      <property name="uri.var.sendtimeStart" expression="$func:sendtimeStart" />
      <property name="uri.var.sendtimeEnd" expression="$func:sendtimeEnd" />
      <property name="uri.var.usesSegment" expression="$func:usesSegment" />
      <property name="uri.var.exact" expression="$func:exact" />
      <property name="uri.var.start" expression="$func:start" />
      <property name="uri.var.limit" expression="$func:limit" />
      <property name="uri.var.sortField" expression="$func:sortField" />
      <property name="uri.var.sortDirection" expression="$func:sortDirection" />
      <payloadFactory media-type="json">
         <format>
            {
               "apikey": "$1"
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.apiKey')" />
         </args>
      </payloadFactory>
      <script language="js">
            <![CDATA[
                var jsonPayload = mc.getPayloadJSON();                
                var campaignId = mc.getProperty('uri.var.campaignId');
                var exact = mc.getProperty('uri.var.exact');
                var folderId = mc.getProperty('uri.var.folderId');
                var fromEmail = mc.getProperty('uri.var.fromEmail');
                var fromName = mc.getProperty('uri.var.fromName');
                var listId = mc.getProperty('uri.var.listId');
                var parentId = mc.getProperty('uri.var.parentId');
                var sendtimeEnd = mc.getProperty('uri.var.sendtimeEnd');
                var sendtimeStart = mc.getProperty('uri.var.sendtimeStart');
                var status = mc.getProperty('uri.var.status');
                var subject = mc.getProperty('uri.var.subject');
                var templateId = mc.getProperty('uri.var.templateId');
                var title = mc.getProperty('uri.var.title');
                var type = mc.getProperty('uri.var.type');
                var usesSegment = mc.getProperty('uri.var.usesSegment');
                var limit = mc.getProperty('uri.var.limit');
                var sortDirection = mc.getProperty('uri.var.sortDirection');
                var sortField = mc.getProperty('uri.var.sortField');
                var start = mc.getProperty('uri.var.start');				
                var filters = new Object();
                if (campaignId != null && campaignId != ""){
                    filters["campaign_id"] = campaignId;
                }                
                if (exact != null && exact != ""){
                    filters["exact"] = exact;
                }                
                if (folderId != null && folderId != ""){
                    filters["folder_id"] = folderId;
                }                
                if (fromEmail != null && fromEmail != ""){
                    filters["from_email"] = fromEmail;
                }                
                if (fromName != null && fromName != ""){
                    filters["from_name"] = fromName;
                }                
                if (listId != null && listId != ""){
                    filters["list_id"] = listId;
                }                
                if (parentId != null && parentId != ""){
                    filters["parent_id"] = parentId;
                }                
                if (sendtimeEnd != null && sendtimeEnd != ""){
                    filters["sendtime_end"] = sendtimeEnd;
                }                
                if (sendtimeStart != null && sendtimeStart != ""){
                    filters["sendtime_start"] = sendtimeStart;
                }                
                if (status != null && status != ""){
                    filters["status"] = status;
                }                
                if (subject != null && subject != ""){
                    filters["subject"] = subject;
                }                
                if (templateId != null && templateId != ""){
                    filters["template_id"] = templateId;
                }                
                if (title != null && title != ""){
                    filters["title"] = title;
                }                
                if (type != null && type != ""){
                    filters["type"] = type;
                }                
                if (usesSegment != null && usesSegment != ""){
                    filters["uses_segment"] = usesSegment;
                }               
                jsonPayload["filters"] = filters;                
                if (limit != null && limit != ""){
                    jsonPayload["limit"] = limit;
                }                
                if (sortDirection != null && sortDirection != ""){
                    jsonPayload["sort_dir"] = sortDirection;
                }                
                if (sortField != null && sortField != ""){
                    jsonPayload["sort_field"] = sortField;
                }                
                if (start != null && start != ""){
                    jsonPayload["start"] = start;
                }                
                mc.setPayloadJSON(jsonPayload);
            ]]>
      </script>
      <!--MailChimp API expects Content-Length Header -->
      <property name="DISABLE_CHUNKING" value="true" scope="axis2" />
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/campaigns/list.{uri.var.format}" />
         </endpoint>
      </call>
      <!-- Remove custom Headers from the API Response -->
      <header name="X-N" action="remove" scope="transport" />
      <header name="X-MailChimp-API-Error-Code" action="remove" scope="transport" />
   </sequence>
</template>